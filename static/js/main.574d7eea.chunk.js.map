{"version":3,"sources":["components/team-page/TeamPageHeader.js","components/team-page/TeamPageBody.js","components/game-page/GameMainMenu.js","components/game-page/GameQuestion.js","App.js","reportWebVitals.js","index.js"],"names":["TeamPageHeader","onGoToGameClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Item","Button","onClick","Link","href","TeamPageBody","Container","Row","style","width","height","ResponsiveEmbed","aspectRatio","src","GameMainMenu","onGoToTeamClick","onSubmitName","Col","sm","Form","onSubmit","e","preventDefault","target","value","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","type","GameQuestion","displayName","useState","answerChoice","setAnswerChoice","handleAnswerSelect","Jumbotron","App","pageStates","MAIN_MENU","WAITING_ROOM","QUESTION","pageState","setPageState","setDisplayName","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.574d7eea.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TeamPageHeader = ({ onGoToGameClick }) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand>Name That Summation</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\" />\r\n            <Nav>\r\n                <Nav.Item className=\"mr-2\">\r\n                <Button onClick={onGoToGameClick}>Go to <strong>Game</strong></Button>\r\n                </Nav.Item>\r\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\r\n                Go to <strong>GitHub</strong>\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nTeamPageHeader.propTypes = {\r\n    onGoToGameClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TeamPageHeader;","\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed';\r\n\r\nconst TeamPageBody = () => {\r\n    return (\r\n        <Container>\r\n            <Row><h3>Team/Client Information</h3></Row>\r\n            <Row><p>Adam Cogdell (adamc77@live.unc.edu): Game Architect, Client Manager</p></Row>\r\n            <Row><p>Emre Yanmis (emre61@live.unc.edu): Software Architect</p></Row>\r\n            <Row><p>Tiger Deng (y.deng@unc.edu): Project Manager, Editor</p></Row>\r\n            <Row><p>John Majikes (jmajikes@cs.unc.edu): Client</p></Row>\r\n\r\n            <Row><h3 id=\"meeting-information\">Meeting Information</h3></Row>\r\n            <Row><p>Client Meetings: Tuesday @ 2:30PM</p></Row>\r\n            <Row><p>Professor Meetings (recitation): Thursday 3:30-4:30PM</p></Row>\r\n            <Row><p>Team Meetings: Monday @ 6:00PM</p></Row>\r\n\r\n            <Row>\r\n                <div style={{ width: '8.5in', height: 'auto' }}>\r\n                    <ResponsiveEmbed aspectRatio=\"1by1\">\r\n                        <iframe src=\"https://docs.google.com/document/d/e/2PACX-1vR3nIMv9RltRskz5HY8NZmztMdaF0d1Mfb3Hda5n9-c8VyV_3afAFM-4RU_UVSMI2WajPdJPZLxVgmS/pub?embedded=true\" />\r\n                    </ResponsiveEmbed>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TeamPageBody;","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GameMainMenu = ({ onGoToTeamClick, onSubmitName }) => {\r\n\r\n    const handleNameSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmitName(e.target[0].value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\" />\r\n            <Nav>\r\n                <Nav.Item className=\"mr-2\">\r\n                <Button onClick={onGoToTeamClick}>Go to <strong>Team Page</strong></Button>\r\n                </Nav.Item>\r\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\r\n                Go to <strong>GitHub</strong>\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm=\"auto\"><h1>Name That Summation</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm={8}>\r\n                    <Form onSubmit={handleNameSubmit}>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                placeholder=\"Display Name\"\r\n                                aria-label=\"Display Name\"\r\n                                aria-describedby=\"display-name-form\"\r\n                                />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"outline-primary\" type=\"submit\">Submit</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nGameMainMenu.propTypes = {\r\n    onGoToTeamClick: PropTypes.func.isRequired,\r\n    onSubmitName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GameMainMenu;","import Button from 'react-bootstrap/Button';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameQuestion = ({ displayName }) => {\r\n\r\n    const [answerChoice, setAnswerChoice] = useState(\"\");\r\n\r\n    const handleAnswerSelect = (e) => {\r\n        setAnswerChoice(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>Name: {displayName}</h2>\r\n        <Jumbotron>\r\n            <h1>CHART GOES HERE</h1>\r\n            <p>\r\n                Once we find a chart api, this is where, we'll draw the summation chart in real time.\r\n            </p>\r\n        </Jumbotron>\r\n        <Button onClick={handleAnswerSelect} id=\"choice1\" variant={answerChoice===\"choice1\"?\"success\":\"primary\"}>y = x</Button>\r\n        <Button onClick={handleAnswerSelect} id=\"choice2\" variant={answerChoice===\"choice2\"?\"success\":\"primary\"}>y = x^2</Button>\r\n        <Button onClick={handleAnswerSelect} id=\"choice3\" variant={answerChoice===\"choice3\"?\"success\":\"primary\"}>y = log_2(x)</Button>\r\n        <Button onClick={handleAnswerSelect} id=\"choice4\" variant={answerChoice===\"choice4\"?\"success\":\"primary\"}>y = sqrt(x)</Button>\r\n        <h1>{answerChoice}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nGameQuestion.propTypes = {\r\n    displayName: PropTypes.string,\r\n}\r\n\r\nexport default GameQuestion;","import Button from 'react-bootstrap/Button';\n\nimport {useState} from 'react';\n\nimport TeamPageHeader from './components/team-page/TeamPageHeader';\nimport TeamPageBody from './components/team-page/TeamPageBody';\nimport GameMainMenu from './components/game-page/GameMainMenu';\nimport GameQuestion from './components/game-page/GameQuestion';\n\nimport './App.css';\n\n// const pageStates = {\n//   TEAM_PAGE: \"TEAM_PAGE\",\n//   GAME: {\n//     MAIN_MENU: \"GAME_MAIN_MENU\",\n//     WAITING_ROOM: \"GAME_WAITING_ROOM\",\n//     QUESTION: \"GAME_QUESTION\",\n//   },\n// };\n// let pageState = pageStates.TEAM_PAGE;\n\nfunction App() {\n\n    // const handleGoToGameClick = () => {\n    //   console.log(pageState, pageStates.TEAM_PAGE, pageState===pageStates.TEAM_PAGE)\n    //   pageState = pageStates.GAME.MAIN_MENU;\n    // }\n\n    const pageStates = {\n        TEAM_PAGE: \"TEAM_PAGE\",\n        GAME: {\n            MAIN_MENU: \"GAME_MAIN_MENU\",\n            WAITING_ROOM: \"GAME_WAITING_ROOM\",\n            QUESTION: \"GAME_QUESTION\",\n        },\n    };\n    const [pageState, setPageState] = useState(pageStates.TEAM_PAGE);\n\n    const [displayName, setDisplayName] = useState(\"\");\n\n    const goToGame = () => {\n        setPageState(pageStates.GAME.MAIN_MENU);\n    }\n    const goToTeam = () => {\n        setPageState(pageStates.TEAM_PAGE);\n    }\n    const goToWaitingRoom = (name) => {\n        setPageState(pageStates.GAME.WAITING_ROOM);\n        setDisplayName(name);\n    }\n    const goToQuestion = () => {\n        setPageState(pageStates.GAME.QUESTION);\n    }\n\n    return (\n        <>\n        {pageState === pageStates.TEAM_PAGE ? <>\n        <TeamPageHeader onGoToGameClick={goToGame} />\n        <br />\n        <TeamPageBody />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.MAIN_MENU ? <>\n        <GameMainMenu onGoToTeamClick={goToTeam} onSubmitName={goToWaitingRoom} />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.WAITING_ROOM ? <>\n        <h1>WAITING</h1>\n        <h2>Name: {displayName}</h2>\n        <Button onClick={goToQuestion}>QUESTION</Button>\n        </> : <></>}\n\n        {pageState === pageStates.GAME.QUESTION ? <>\n        <GameQuestion />\n        </> : <></>}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}