{"version":3,"sources":["firebase.js","components/game-page/sample_data.js","components/team-page/TeamPageHeader.js","components/team-page/TeamPageBody.js","components/game-page/GameMainMenu.js","components/game-page/GameChart.js","components/game-page/GameQuestion.js","components/game-page/GameWaitingRoom.js","components/game-page/GameLeaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","TeamPageHeader","onGoToGameClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Item","Button","onClick","Link","href","TeamPageBody","Container","Row","style","width","height","ResponsiveEmbed","aspectRatio","src","GameMainMenu","onGoToTeamClick","onSubmitName","useState","showSettingsModal","setShowSettingsModal","handleCloseSettings","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Check","type","label","Footer","Col","sm","onSubmit","e","preventDefault","target","value","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","GameChart","data","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","GameQuestion","displayName","chartData","questionTime","endQuestion","answerChoice","setAnswerChoice","handleAnswerSelect","maxTimer","timer","setTimer","chartDataSlice","setChartDataSlice","useEffect","interval","setInterval","cd","slice","parseFloat","length","clearInterval","Card","as","GameWaitingRoom","playersList","map","player","name","city","GameLeaderboard","pl","func","x","push","sample_data","App","pageStates","MAIN_MENU","WAITING_ROOM","QUESTION","LEADERBOARD","REVIEW","pageState","setPageState","setDisplayName","goToWaitingRoom","collection","add","then","docRef","console","log","catch","error","goToQuestion","goToLeaderboard","players","setPlayers","React","a","get","docs","doc","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfa5000f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBzSeHJ4YWxiLpE09A7mzpYUxUfOWeq3SU\",\r\n    authDomain: \"sum-that-notation-13637.firebaseapp.com\",\r\n    projectId: \"sum-that-notation-13637\",\r\n    storageBucket: \"sum-that-notation-13637.appspot.com\",\r\n    messagingSenderId: \"912432195227\",\r\n    appId: \"1:912432195227:web:bc908eb3957185b597483e\",\r\n    measurementId: \"G-MCKECB516P\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth;\r\nexport const db = firebase.firestore();","const xStart = 0;\r\nconst xEnd = 10;\r\nconst xInc = 1;\r\n\r\nconst func = (x) => {\r\n    return x**2;\r\n}\r\n\r\nlet data = [];\r\nfor (let x = xStart; x <= xEnd; x+=xInc) {\r\n    data.push(\r\n        {\r\n            \"x\":x,\r\n            \"y\":func(x)\r\n        }\r\n    );\r\n}\r\n\r\nconst sample_data = {\r\n    \"id\": \"summation function\",\r\n    \"color\": \"hsl(24, 70%, 50%)\",\r\n    \"data\": data\r\n};\r\n\r\nexport default sample_data;","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TeamPageHeader = ({ onGoToGameClick }) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand>Name That Summation</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\" />\r\n            <Nav>\r\n                <Nav.Item className=\"mr-2\">\r\n                <Button onClick={onGoToGameClick}>Go to <strong>Game</strong></Button>\r\n                </Nav.Item>\r\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\r\n                Go to <strong>GitHub</strong>\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nTeamPageHeader.propTypes = {\r\n    onGoToGameClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TeamPageHeader;","\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed';\r\n\r\nconst TeamPageBody = () => {\r\n    return (\r\n        <Container>\r\n            <Row><h3>Team/Client Information</h3></Row>\r\n            <Row><p>Adam Cogdell (adamc77@live.unc.edu): Game Architect, Client Manager</p></Row>\r\n            <Row><p>Emre Yanmis (emre61@live.unc.edu): Software Architect</p></Row>\r\n            <Row><p>Tiger Deng (y.deng@unc.edu): Project Manager, Editor</p></Row>\r\n            <Row><p>John Majikes (jmajikes@cs.unc.edu): Client</p></Row>\r\n\r\n            <Row><h3 id=\"meeting-information\">Meeting Information</h3></Row>\r\n            <Row><p>Client Meetings: Tuesday @ 2:30PM</p></Row>\r\n            <Row><p>Professor Meetings (recitation): Thursday 3:30-4:30PM</p></Row>\r\n            <Row><p>Team Meetings: Monday @ 6:00PM</p></Row>\r\n\r\n            <Row>\r\n                <div style={{ width: '8.5in', height: 'auto' }}>\r\n                    <ResponsiveEmbed aspectRatio=\"1by1\">\r\n                        <iframe src=\"https://docs.google.com/document/d/e/2PACX-1vR3nIMv9RltRskz5HY8NZmztMdaF0d1Mfb3Hda5n9-c8VyV_3afAFM-4RU_UVSMI2WajPdJPZLxVgmS/pub?embedded=true\" />\r\n                    </ResponsiveEmbed>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TeamPageBody;","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst GameMainMenu = ({ onGoToTeamClick, onSubmitName }) => {\r\n\r\n    const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n    const handleShowSettings = () => setShowSettingsModal(true);\r\n    const handleCloseSettings = () => setShowSettingsModal(false);\r\n\r\n    const handleNameSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmitName(e.target[0].value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\" />\r\n            <Nav>\r\n                <Nav.Item className=\"mr-2\">\r\n                <Button onClick={onGoToTeamClick}>Go to <strong>Team Page</strong></Button>\r\n                </Nav.Item>\r\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\r\n                Go to <strong>GitHub</strong>\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        <Button variant=\"secondary\" onClick={handleShowSettings}>Settings</Button>\r\n        <Modal show={showSettingsModal} onHide={handleCloseSettings} aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <fieldset>\r\n                <Form>\r\n                    <Form.Check type=\"checkbox\" label=\"Settings Option 1\" />\r\n                    <Form.Check type=\"checkbox\" label=\"Settings Option 2\" />\r\n                </Form>\r\n                <Form>\r\n                    <Form.Check type=\"radio\" label=\"Settings Option 3\" />\r\n                    <Form.Check type=\"radio\" label=\"Settings Option 4\" />\r\n                </Form>\r\n            </fieldset>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseSettings}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm=\"auto\"><h1>Name That Summation</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm={8}>\r\n                    <Form onSubmit={handleNameSubmit}>\r\n                        <InputGroup>\r\n                            <FormControl\r\n                                placeholder=\"Display Name\"\r\n                                aria-label=\"Display Name\"\r\n                                aria-describedby=\"display-name-form\"\r\n                                />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"outline-primary\" type=\"submit\">Submit</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nGameMainMenu.propTypes = {\r\n    onGoToTeamClick: PropTypes.func.isRequired,\r\n    onSubmitName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GameMainMenu;","import { ResponsiveLine } from 'nivo/es/components/charts/line';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GameChart = ({ data }) => {\r\n    return (\r\n        <ResponsiveLine\r\n            data={[data]}\r\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n            xScale={{ type: 'point' }}\r\n            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n            yFormat=\" >-.2f\"\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                orient: 'bottom',\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'x-axis',\r\n                legendOffset: 36,\r\n                legendPosition: 'middle'\r\n            }}\r\n            axisLeft={{\r\n                orient: 'left',\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'y-axis',\r\n                legendOffset: -40,\r\n                legendPosition: 'middle'\r\n            }}\r\n            pointSize={10}\r\n            pointColor={{ theme: 'background' }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: 'serieColor' }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n            legends={[\r\n                {\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 100,\r\n                    translateY: 0,\r\n                    itemsSpacing: 0,\r\n                    itemDirection: 'left-to-right',\r\n                    itemWidth: 80,\r\n                    itemHeight: 20,\r\n                    itemOpacity: 0.75,\r\n                    symbolSize: 12,\r\n                    symbolShape: 'circle',\r\n                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nGameChart.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default GameChart;","import Button from 'react-bootstrap/Button';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport GameChart from './GameChart';\r\n\r\nimport {useEffect, useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst GameQuestion = ({ displayName, chartData, questionTime, endQuestion }) => {\r\n\r\n    const [answerChoice, setAnswerChoice] = useState(\"\");\r\n    const handleAnswerSelect = (e) => {\r\n        setAnswerChoice(e.target.id);\r\n    }\r\n\r\n    const maxTimer = questionTime;\r\n    const [timer, setTimer] = useState(questionTime);\r\n    const [chartDataSlice, setChartDataSlice] = useState(chartData);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (timer > 0) { setTimer(timer => timer-1); }\r\n            if (timer <= 0) { setTimer(0); endQuestion(); }\r\n\r\n            let cd = {...chartData};\r\n            cd.data = cd.data.slice(0,parseFloat(maxTimer-timer)/parseFloat(maxTimer) * chartData.data.length);\r\n            setChartDataSlice(cd);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [timer, maxTimer, chartData, endQuestion]);\r\n\r\n    return (\r\n        <>\r\n        <h2>Name: {displayName}</h2>\r\n        <Card style={{height:\"80vh\"}} className=\"text-center\">\r\n            <Card.Header as=\"h5\">Time Remaining: {timer}</Card.Header>\r\n            <Card.Body>\r\n                <GameChart data={chartDataSlice} />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Button onClick={handleAnswerSelect} id=\"choice1\" variant={answerChoice===\"choice1\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = x</Button>\r\n                <Button onClick={handleAnswerSelect} id=\"choice2\" variant={answerChoice===\"choice2\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = x^2</Button>\r\n                <Button onClick={handleAnswerSelect} id=\"choice3\" variant={answerChoice===\"choice3\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = log_2(x)</Button>\r\n                <Button onClick={handleAnswerSelect} id=\"choice4\" variant={answerChoice===\"choice4\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = sqrt(x)</Button>\r\n            </Card.Footer>\r\n        </Card>\r\n        <h1>{answerChoice}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nGameQuestion.propTypes = {\r\n    displayName: PropTypes.string.isRequired,\r\n    chartData: PropTypes.object.isRequired,\r\n    questionTime: PropTypes.number.isRequired,\r\n    endQuestion: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default GameQuestion;","import {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameWaitingRoom = ({ displayName, playersList }) => {\r\n\r\n    return (\r\n        <>\r\n        <h2>Name: {displayName}</h2>\r\n        <br />\r\n        <h1>WAITING</h1>\r\n        <ul>\r\n            {playersList.map(player =>  <li key={player.name+\"\"+player.city}>{player.name}</li> )}\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nGameWaitingRoom.propTypes = {\r\n    displayName: PropTypes.string.isRequired,\r\n    playersList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default GameWaitingRoom;","import {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameLeaderboard = ({ displayName, playersList }) => {\r\n\r\n    return (\r\n        <>\r\n        <h2>Name: {displayName}</h2>\r\n        <br />\r\n        <h1>LEADERBOARD</h1>\r\n        <uL>\r\n        {playersList.map(pl =>  <li key={pl}>{pl}</li> )}\r\n        </uL>\r\n        </>\r\n    );\r\n}\r\n\r\nGameLeaderboard.propTypes = {\r\n    displayName: PropTypes.string.isRequired,\r\n    playersList: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default GameLeaderboard;","import { db } from \"./firebase\";\n\nimport Button from 'react-bootstrap/Button';\n\nimport React from 'react';\nimport {useState} from 'react';\n\nimport TeamPageHeader from './components/team-page/TeamPageHeader';\nimport TeamPageBody from './components/team-page/TeamPageBody';\nimport GameMainMenu from './components/game-page/GameMainMenu';\nimport GameQuestion from './components/game-page/GameQuestion';\nimport GameWaitingRoom from './components/game-page/GameWaitingRoom';\nimport GameLeaderboard from './components/game-page/GameLeaderboard';\n\nimport sample_data from './components/game-page/sample_data';\n\nimport './App.css';\n\n\nfunction App() {\n\n    const pageStates = {\n        TEAM_PAGE: \"TEAM_PAGE\",\n        GAME: {\n            MAIN_MENU: \"GAME_MAIN_MENU\",\n            WAITING_ROOM: \"GAME_WAITING_ROOM\",\n            QUESTION: \"GAME_QUESTION\",\n            LEADERBOARD: \"GAME_LEADERBOARD\",\n            REVIEW: \"GAME_REVIEW\",\n        },\n    };\n    const [pageState, setPageState] = useState(pageStates.TEAM_PAGE);\n\n    const [displayName, setDisplayName] = useState(\"John Doe\");\n\n    const goToGame = () => {\n        setPageState(pageStates.GAME.MAIN_MENU);\n    }\n    const goToTeam = () => {\n        setPageState(pageStates.TEAM_PAGE);\n    }\n    const goToWaitingRoom = (name) => {\n        setPageState(pageStates.GAME.WAITING_ROOM);\n        setDisplayName(name);\n        db.collection(\"playersDB\").add({\n            name: name,\n            city: 1337\n        })\n        .then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n    const goToQuestion = () => {\n        setPageState(pageStates.GAME.QUESTION);\n    }\n    const goToLeaderboard = () => {\n        setPageState(pageStates.GAME.LEADERBOARD);\n    }\n\n    const [players, setPlayers] = useState([]);\n    React.useEffect(() => {\n        const fetchData = async () => {\n            const data = await db.collection(\"playersDB\").get();\n            setPlayers(data.docs.map(doc => doc.data()));\n        }\n        fetchData();\n    });\n\n    return (\n        <>\n        {pageState === pageStates.TEAM_PAGE ? <>\n        <TeamPageHeader onGoToGameClick={goToGame} />\n        <br />\n        <TeamPageBody />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.MAIN_MENU ? <>\n        <GameMainMenu onGoToTeamClick={goToTeam} onSubmitName={goToWaitingRoom} />\n        <br />\n        <Button onClick={() => goToWaitingRoom(displayName)}>WAITING ROOM</Button>\n        <Button onClick={goToQuestion}>QUESTION</Button>\n        <Button onClick={goToLeaderboard}>LEADERBOARD</Button>\n        </> : <></>}\n\n        {pageState === pageStates.GAME.WAITING_ROOM ? <>\n        <GameWaitingRoom displayName={displayName} playersList={players} />\n        <Button onClick={goToQuestion}>QUESTION</Button>\n        </> : <></>}\n\n        {pageState === pageStates.GAME.QUESTION ? <>\n        <GameQuestion displayName={displayName} chartData={sample_data} questionTime={60} endQuestion={goToLeaderboard} />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.LEADERBOARD ? <>\n        <GameLeaderboard displayName={displayName} playersList={players} />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.REVIEW ? <>\n        <GameLeaderboard displayName={displayName} />\n        </> : <></>}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}