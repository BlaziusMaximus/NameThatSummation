{"version":3,"sources":["firebase.js","components/game-page/sample_data.js","components/team-page/TeamPageHeader.js","components/team-page/TeamPageBody.js","components/game-page/GameMainMenu.js","components/game-page/GameChart.js","components/game-page/GameQuestion.js","components/game-page/GameWaitingRoom.js","components/game-page/GameLeaderboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","x","db","firestore","TeamPageHeader","onGoToGameClick","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Item","Button","onClick","Link","href","TeamPageBody","Container","Row","style","width","height","ResponsiveEmbed","aspectRatio","src","GameMainMenu","onGoToTeamClick","onSubmitName","useState","showSettingsModal","setShowSettingsModal","handleCloseSettings","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Check","type","label","Footer","Col","sm","onSubmit","e","preventDefault","target","value","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","GameChart","data","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","GameQuestion","displayName","chartData","questionTime","endQuestion","answerChoice","setAnswerChoice","handleAnswerSelect","maxTimer","timer","setTimer","cd","slice","chartDataSlice","setChartDataSlice","useEffect","interval","setInterval","Math","parseFloat","l","length","sliceI","floor","console","log","clearInterval","Card","as","GameWaitingRoom","playersList","map","player","name","city","GameLeaderboard","answerTime","push","sample_data","App","pageStates","MAIN_MENU","WAITING_ROOM","QUESTION","LEADERBOARD","REVIEW","pageState","setPageState","setDisplayName","setanswerTime","goToWaitingRoom","collection","add","then","docRef","catch","error","goToQuestion","goToLeaderboard","t","players","setPlayers","React","a","get","docs","doc","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f202652a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBzSeHJ4YWxiLpE09A7mzpYUxUfOWeq3SU\",\n    authDomain: \"sum-that-notation-13637.firebaseapp.com\",\n    projectId: \"sum-that-notation-13637\",\n    storageBucket: \"sum-that-notation-13637.appspot.com\",\n    messagingSenderId: \"912432195227\",\n    appId: \"1:912432195227:web:bc908eb3957185b597483e\",\n    measurementId: \"G-MCKECB516P\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth;\nexport const db = firebase.firestore();","/*\nCSV FILE\n{\n    question1: {\n        xStart: 0,\n        xEnd: 10,\n        xInc: 1,\n        latexFunc: x**2,\n        wrongLatexChoices: [ x, lg(x), x**3 ],\n        \n    },\n    ...,\n    ...\n}\n*/\n\nconst xStart = 0;\nconst xEnd = 10;\nconst xInc = 1;\n\nconst func = (x) => {\n    return x**2;\n}\n\nlet data = [];\nfor (let x = xStart; x <= xEnd; x+=xInc) {\n    data.push(\n        {\n            \"x\":x,\n            \"y\":func(x)\n        }\n    );\n}\n\nconst sample_data = {\n    \"id\": \"summation function\",\n    \"color\": \"hsl(24, 70%, 50%)\",\n    \"data\": data\n};\n\nexport default sample_data;","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nimport PropTypes from 'prop-types';\n\nconst TeamPageHeader = ({ onGoToGameClick }) => {\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>Name That Summation</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\" />\n            <Nav>\n                <Nav.Item className=\"mr-2\">\n                <Button onClick={onGoToGameClick}>Go to <strong>Game</strong></Button>\n                </Nav.Item>\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\n                Go to <strong>GitHub</strong>\n                </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nTeamPageHeader.propTypes = {\n    onGoToGameClick: PropTypes.func.isRequired,\n}\n\nexport default TeamPageHeader;","\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed';\n\nconst TeamPageBody = () => {\n    return (\n        <Container>\n            <Row><h3>Team/Client Information</h3></Row>\n            <Row><p>Adam Cogdell (adamc77@live.unc.edu): Game Architect, Client Manager</p></Row>\n            <Row><p>Emre Yanmis (emre61@live.unc.edu): Software Architect</p></Row>\n            <Row><p>Tiger Deng (y.deng@unc.edu): Project Manager, Editor</p></Row>\n            <Row><p>John Majikes (jmajikes@cs.unc.edu): Client</p></Row>\n\n            <Row><h3 id=\"meeting-information\">Meeting Information</h3></Row>\n            <Row><p>Client Meetings: Tuesday @ 2:30PM</p></Row>\n            <Row><p>Professor Meetings (recitation): Thursday 3:30-4:30PM</p></Row>\n            <Row><p>Team Meetings: Monday @ 6:00PM</p></Row>\n\n            <Row>\n                <div style={{ width: '8.5in', height: 'auto' }}>\n                    <ResponsiveEmbed aspectRatio=\"1by1\">\n                        <iframe src=\"https://docs.google.com/document/d/e/2PACX-1vR3nIMv9RltRskz5HY8NZmztMdaF0d1Mfb3Hda5n9-c8VyV_3afAFM-4RU_UVSMI2WajPdJPZLxVgmS/pub?embedded=true\" />\n                    </ResponsiveEmbed>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\nexport default TeamPageBody;","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Modal from 'react-bootstrap/Modal';\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n\nconst GameMainMenu = ({ onGoToTeamClick, onSubmitName }) => {\n\n    const [showSettingsModal, setShowSettingsModal] = useState(false);\n    const handleShowSettings = () => setShowSettingsModal(true);\n    const handleCloseSettings = () => setShowSettingsModal(false);\n\n    const handleNameSubmit = (e) => {\n        e.preventDefault();\n        onSubmitName(e.target[0].value);\n    }\n\n    return (\n        <>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\" />\n            <Nav>\n                <Nav.Item className=\"mr-2\">\n                <Button onClick={onGoToTeamClick}>Go to <strong>Team Page</strong></Button>\n                </Nav.Item>\n                <Nav.Link href=\"https://github.com/BlaziusMaximus/NameThatSummation\">\n                Go to <strong>GitHub</strong>\n                </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        <Button variant=\"secondary\" onClick={handleShowSettings}>Settings</Button>\n        <Modal show={showSettingsModal} onHide={handleCloseSettings} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <Modal.Header closeButton>\n            <Modal.Title>Settings</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <fieldset>\n                <Form>\n                    <Form.Check type=\"checkbox\" label=\"Settings Option 1\" />\n                    <Form.Check type=\"checkbox\" label=\"Settings Option 2\" />\n                </Form>\n                <Form>\n                    <Form.Check type=\"radio\" label=\"Settings Option 3\" />\n                    <Form.Check type=\"radio\" label=\"Settings Option 4\" />\n                </Form>\n            </fieldset>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseSettings}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col sm=\"auto\"><h1>Name That Summation</h1></Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={8}>\n                    <Form onSubmit={handleNameSubmit}>\n                        <InputGroup>\n                            <FormControl\n                                placeholder=\"Display Name\"\n                                aria-label=\"Display Name\"\n                                aria-describedby=\"display-name-form\"\n                                />\n                            <InputGroup.Append>\n                                <Button variant=\"outline-primary\" type=\"submit\">Submit</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n        \n        </>\n    );\n}\n\nGameMainMenu.propTypes = {\n    onGoToTeamClick: PropTypes.func.isRequired,\n    onSubmitName: PropTypes.func.isRequired,\n};\n\nexport default GameMainMenu;","import { ResponsiveLine } from 'nivo/es/components/charts/line';\n\nimport PropTypes from 'prop-types';\n\n\nconst GameChart = ({ data }) => {\n    return (\n        <ResponsiveLine\n            data={[data]}\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n            xScale={{ type: 'point' }}\n            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n            yFormat=\" >-.2f\"\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                orient: 'bottom',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'x-axis',\n                legendOffset: 36,\n                legendPosition: 'middle'\n            }}\n            axisLeft={{\n                orient: 'left',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'y-axis',\n                legendOffset: -40,\n                legendPosition: 'middle'\n            }}\n            pointSize={10}\n            pointColor={{ theme: 'background' }}\n            pointBorderWidth={2}\n            pointBorderColor={{ from: 'serieColor' }}\n            pointLabelYOffset={-12}\n            useMesh={true}\n            legends={[\n                {\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 100,\n                    translateY: 0,\n                    itemsSpacing: 0,\n                    itemDirection: 'left-to-right',\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemOpacity: 0.75,\n                    symbolSize: 12,\n                    symbolShape: 'circle',\n                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemBackground: 'rgba(0, 0, 0, .03)',\n                                itemOpacity: 1\n                            }\n                        }\n                    ]\n                }\n            ]}\n        />\n    );\n};\n\nGameChart.propTypes = {\n    data: PropTypes.array.isRequired,\n}\n\nexport default GameChart;","import Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport GameChart from './GameChart';\n\nimport {useEffect, useState} from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\n\nconst GameQuestion = ({ displayName, chartData, questionTime, endQuestion }) => {\n\n    const [answerChoice, setAnswerChoice] = useState(\"\");\n    const handleAnswerSelect = (e) => {\n        setAnswerChoice(e.target.id);\n    }\n\n    const maxTimer = questionTime;\n    const [timer, setTimer] = useState(questionTime);\n    let cd = {...chartData};\n    cd.data = cd.data.slice(0,2);\n    const [chartDataSlice, setChartDataSlice] = useState(cd);\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (timer > 0) { setTimer(timer => timer-1); }\n            if (timer <= 0) { endQuestion(Math.max(0, timer)); }\n\n            let cd = {...chartData};\n            let x = parseFloat(maxTimer-timer)/parseFloat(maxTimer);\n            let l = chartData.data.length;\n            let sliceI = Math.floor(x**2 * (l-2))+2;\n            console.log(\"before\"+sliceI)\n            console.log(cd)\n            cd.data = cd.data.slice(0, Math.min(chartData.data.length-1, sliceI));\n            console.log(\"after\")\n            console.log(cd)\n            setChartDataSlice(cd);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [timer, maxTimer, chartData, endQuestion]);\n\n    return (\n        <>\n        <h2>Name: {displayName}</h2>\n        <Card style={{height:\"80vh\"}} className=\"text-center\">\n            <Card.Header as=\"h5\">Time Remaining: {timer}</Card.Header>\n            <Card.Body>\n                <GameChart data={chartDataSlice} />\n            </Card.Body>\n            <Card.Footer>\n                <Button onClick={handleAnswerSelect} id=\"choice1\" variant={answerChoice===\"choice1\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = x</Button>\n                <Button onClick={handleAnswerSelect} id=\"choice2\" variant={answerChoice===\"choice2\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = x^2</Button>\n                <Button onClick={handleAnswerSelect} id=\"choice3\" variant={answerChoice===\"choice3\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = log_2(x)</Button>\n                <Button onClick={handleAnswerSelect} id=\"choice4\" variant={answerChoice===\"choice4\"?\"success\":\"primary\"} style={{margin: \"0 2%\"}}>y = sqrt(x)</Button>\n            </Card.Footer>\n        </Card>\n        <h1>{answerChoice}</h1>\n        </>\n    );\n}\n\nGameQuestion.propTypes = {\n    displayName: PropTypes.string.isRequired,\n    chartData: PropTypes.object.isRequired,\n    questionTime: PropTypes.number.isRequired,\n    endQuestion: PropTypes.func.isRequired,\n}\n\nexport default GameQuestion;","import {useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst GameWaitingRoom = ({ displayName, playersList }) => {\n\n    return (\n        <>\n        <h2>Name: {displayName}</h2>\n        <br />\n        <h1>WAITING</h1>\n        <ul>\n            {playersList.map(player =>  <li key={player.name+\"\"+player.city}>{player.name}</li> )}\n        </ul>\n        </>\n    );\n}\n\nGameWaitingRoom.propTypes = {\n    displayName: PropTypes.string.isRequired,\n    playersList: PropTypes.array.isRequired,\n}\n\nexport default GameWaitingRoom;","import {useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst GameLeaderboard = ({ displayName, playersList, answerTime }) => {\n\n    return (\n        <>\n        <h2>Name: {displayName}</h2>\n        <h3>Score: {answerTime!=null?answerTime:\"nah\"}</h3>\n        <br />\n        <h1>LEADERBOARD</h1>\n        <ul>\n            {playersList.map(player =>  <li key={player.name+\"\"+player.city}>{player.name}</li> )}\n        </ul>\n        </>\n    );\n}\n\nGameLeaderboard.propTypes = {\n    displayName: PropTypes.string.isRequired,\n    playersList: PropTypes.array.isRequired,\n    answerTime: PropTypes.number.isRequired,\n}\n\nexport default GameLeaderboard;","import { db } from \"./firebase\";\n\nimport Button from 'react-bootstrap/Button';\n\nimport React from 'react';\nimport {useState} from 'react';\n\nimport TeamPageHeader from './components/team-page/TeamPageHeader';\nimport TeamPageBody from './components/team-page/TeamPageBody';\nimport GameMainMenu from './components/game-page/GameMainMenu';\nimport GameQuestion from './components/game-page/GameQuestion';\nimport GameWaitingRoom from './components/game-page/GameWaitingRoom';\nimport GameLeaderboard from './components/game-page/GameLeaderboard';\n\nimport sample_data from './components/game-page/sample_data';\n\nimport './App.css';\n\n\nfunction App() {\n\n    const pageStates = {\n        TEAM_PAGE: \"TEAM_PAGE\",\n        GAME: {\n            MAIN_MENU: \"GAME_MAIN_MENU\",\n            WAITING_ROOM: \"GAME_WAITING_ROOM\",\n            QUESTION: \"GAME_QUESTION\",\n            LEADERBOARD: \"GAME_LEADERBOARD\",\n            REVIEW: \"GAME_REVIEW\",\n        },\n    };\n    const [pageState, setPageState] = useState(pageStates.TEAM_PAGE);\n\n    const [displayName, setDisplayName] = useState(\"John Doe\");\n\n    const [answerTime, setanswerTime] = useState(null);\n\n    const goToGame = () => {\n        setPageState(pageStates.GAME.MAIN_MENU);\n    }\n    const goToTeam = () => {\n        setPageState(pageStates.TEAM_PAGE);\n    }\n    const goToWaitingRoom = (name) => {\n        setPageState(pageStates.GAME.WAITING_ROOM);\n        setDisplayName(name);\n        db.collection(\"playersDB\").add({\n            name: name,\n            city: 1337\n        })\n        .then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch((error) => {\n            console.error(\"Error adding document: \", error);\n        });\n    }\n    const goToQuestion = () => {\n        setPageState(pageStates.GAME.QUESTION);\n    }\n    const goToLeaderboard = (t) => {\n        setPageState(pageStates.GAME.LEADERBOARD);\n        setanswerTime(t);\n    }\n\n    const [players, setPlayers] = useState([]);\n    React.useEffect(() => {\n        const fetchData = async () => {\n            const data = await db.collection(\"playersDB\").get();\n            setPlayers(data.docs.map(doc => doc.data()));\n        }\n        fetchData();\n        console.log(\"fetched players from firebase\")\n    }, []);\n\n    console.log(answerTime)\n\n    return (\n        <>\n        {pageState === pageStates.TEAM_PAGE ? <>\n        <TeamPageHeader onGoToGameClick={goToGame} />\n        <br />\n        <TeamPageBody />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.MAIN_MENU ? <>\n        <GameMainMenu onGoToTeamClick={goToTeam} onSubmitName={goToWaitingRoom} />\n        <br />\n        <Button onClick={() => goToWaitingRoom(displayName)}>WAITING ROOM</Button>\n        <Button onClick={goToQuestion}>QUESTION</Button>\n        <Button onClick={() => goToLeaderboard(1)}>LEADERBOARD</Button>\n        </> : <></>}\n\n        {pageState === pageStates.GAME.WAITING_ROOM ? <>\n        <GameWaitingRoom displayName={displayName} playersList={players} />\n        <Button onClick={goToQuestion}>QUESTION</Button>\n        </> : <></>}\n\n        {pageState === pageStates.GAME.QUESTION ? <>\n        <GameQuestion displayName={displayName} chartData={sample_data} questionTime={15} endQuestion={goToLeaderboard} />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.LEADERBOARD ? <>\n        <GameLeaderboard displayName={displayName} playersList={players} answerTime={answerTime} />\n        </> : <></>}\n\n        {pageState === pageStates.GAME.REVIEW ? <>\n        <GameLeaderboard displayName={displayName} />\n        </> : <></>}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}